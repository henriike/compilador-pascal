Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARRAY
    CASE
    COMMENT
    DIVIDE_INT
    DOWNTO
    EXP
    FALSE
    FOR
    LBRACKET
    OF
    RBRACKET
    RESERVED
    SCORE
    TO
    TRUE

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON block
Rule 2     program -> PROGRAM ID SEMICOLON
Rule 3     block -> const_declaration_part var_declaration_part subroutine_declaration_part compound_statement
Rule 4     const_declaration_part -> CONST const_definition
Rule 5     const_declaration_part -> <empty>
Rule 6     const_definition -> ID EQUALS types SEMICOLON const_definition
Rule 7     const_definition -> ID EQUALS types SEMICOLON
Rule 8     var_declaration_part -> VAR var_declaration
Rule 9     var_declaration_part -> <empty>
Rule 10    var_declaration -> identifier_list TWOPOINTS types SEMICOLON var_declaration
Rule 11    var_declaration -> identifier_list TWOPOINTS types SEMICOLON
Rule 12    types -> INTEGER
Rule 13    types -> REAL
Rule 14    types -> STRING
Rule 15    types -> BOOLEAN
Rule 16    types -> CHAR
Rule 17    types -> ID
Rule 18    identifier_list -> ID
Rule 19    identifier_list -> ID COMMA identifier_list
Rule 20    subroutine_declaration_part -> procedure_declaration subroutine_declaration_part
Rule 21    subroutine_declaration_part -> function_declaration subroutine_declaration_part
Rule 22    subroutine_declaration_part -> <empty>
Rule 23    procedure_declaration -> PROCEDURE ID LPARENT param_section RPARENT SEMICOLON
Rule 24    function_declaration -> FUNCTION ID LPARENT param_section RPARENT TWOPOINTS types SEMICOLON
Rule 25    param_section -> identifier_list TWOPOINTS types SEMICOLON param_section
Rule 26    param_section -> <empty>
Rule 27    compound_statement -> BEGIN statement SEMICOLON statement END SEMICOLON
Rule 28    compound_statement -> BEGIN statement END SEMICOLON
Rule 29    statement -> assign_statement statement
Rule 30    statement -> procedure_call statement
Rule 31    statement -> if_statement statement
Rule 32    statement -> while_statement statement
Rule 33    statement -> repeat_statement statement
Rule 34    statement -> compound_statement statement
Rule 35    statement -> <empty>
Rule 36    assign_statement -> ID ASSIGNMENT expr SEMICOLON
Rule 37    procedure_call -> ID LPARENT expr_list RPARENT SEMICOLON
Rule 38    if_statement -> if1
Rule 39    if_statement -> if2
Rule 40    if_statement -> <empty>
Rule 41    if1 -> IF expr_list THEN if1
Rule 42    if1 -> IF expr_list THEN if2
Rule 43    if1 -> ELSE if1
Rule 44    if1 -> <empty>
Rule 45    if2 -> IF expr_list THEN if2
Rule 46    if2 -> ELSE if2
Rule 47    while_statement -> WHILE expr DO statement
Rule 48    repeat_statement -> REPEAT statement UNTIL expr
Rule 49    expr_list -> expr
Rule 50    expr_list -> expr COMMA expr_list
Rule 51    expr -> simple_expr relop_simple_expr
Rule 52    relop_simple_expr -> relop simple_expr relop_simple_expr
Rule 53    relop_simple_expr -> <empty>
Rule 54    relop -> EQUALS
Rule 55    relop -> LTHAN
Rule 56    relop -> GTHAN
Rule 57    relop -> DIFFERENT
Rule 58    relop -> GEQUALS
Rule 59    relop -> LEQUALS
Rule 60    simple_expr -> uplus_uminus factor
Rule 61    simple_expr -> uplus_uminus factor addop_mulop factor simple_expr
Rule 62    uplus_uminus -> UPLUS
Rule 63    uplus_uminus -> UMINUS
Rule 64    uplus_uminus -> <empty>
Rule 65    addop_mulop -> PLUS
Rule 66    addop_mulop -> MINUS
Rule 67    addop_mulop -> OR
Rule 68    addop_mulop -> TIMES
Rule 69    addop_mulop -> DIVIDE
Rule 70    addop_mulop -> DIV
Rule 71    addop_mulop -> MOD
Rule 72    addop_mulop -> AND
Rule 73    addop_mulop -> <empty>
Rule 74    factor -> ID
Rule 75    factor -> INTEGER
Rule 76    factor -> REAL
Rule 77    factor -> STRING
Rule 78    factor -> NOT factor
Rule 79    factor -> <empty>

Terminals, with rules where they appear

AND                  : 72
ARRAY                : 
ASSIGNMENT           : 36
BEGIN                : 27 28
BOOLEAN              : 15
CASE                 : 
CHAR                 : 16
COMMA                : 19 50
COMMENT              : 
CONST                : 4
DIFFERENT            : 57
DIV                  : 70
DIVIDE               : 69
DIVIDE_INT           : 
DO                   : 47
DOWNTO               : 
ELSE                 : 43 46
END                  : 27 28
EQUALS               : 6 7 54
EXP                  : 
FALSE                : 
FOR                  : 
FUNCTION             : 24
GEQUALS              : 58
GTHAN                : 56
ID                   : 1 2 6 7 17 18 19 23 24 36 37 74
IF                   : 41 42 45
INTEGER              : 12 75
LBRACKET             : 
LEQUALS              : 59
LPARENT              : 23 24 37
LTHAN                : 55
MINUS                : 66
MOD                  : 71
NOT                  : 78
OF                   : 
OR                   : 67
PLUS                 : 65
PROCEDURE            : 23
PROGRAM              : 1 2
RBRACKET             : 
REAL                 : 13 76
REPEAT               : 48
RESERVED             : 
RPARENT              : 23 24 37
SCORE                : 
SEMICOLON            : 1 2 6 7 10 11 23 24 25 27 27 28 36 37
STRING               : 14 77
THEN                 : 41 42 45
TIMES                : 68
TO                   : 
TRUE                 : 
TWOPOINTS            : 10 11 24 25
UMINUS               : 63
UNTIL                : 48
UPLUS                : 62
VAR                  : 8
WHILE                : 47
error                : 

Nonterminals, with rules where they appear

addop_mulop          : 61
assign_statement     : 29
block                : 1
compound_statement   : 3 34
const_declaration_part : 3
const_definition     : 4 6
expr                 : 36 47 48 49 50
expr_list            : 37 41 42 45 50
factor               : 60 61 61 78
function_declaration : 21
identifier_list      : 10 11 19 25
if1                  : 38 41 43
if2                  : 39 42 45 46
if_statement         : 31
param_section        : 23 24 25
procedure_call       : 30
procedure_declaration : 20
program              : 0
relop                : 52
relop_simple_expr    : 51 52
repeat_statement     : 33
simple_expr          : 51 52 61
statement            : 27 27 28 29 30 31 32 33 34 47 48
subroutine_declaration_part : 3 20 21
types                : 6 7 10 11 24 25
uplus_uminus         : 60 61
var_declaration      : 8 10
var_declaration_part : 3
while_statement      : 32

